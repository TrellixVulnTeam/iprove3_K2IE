{"ast":null,"code":"/**\r\n * Copyright 2015, Yahoo! Inc.\r\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\r\n */\nimport assign from 'lodash/assign';\nimport globalVars from '../globalVars';\nvar supportPassiveEvent = globalVars.supportPassiveEvent;\nvar defaultEventOption = {\n  capture: false,\n  passive: false\n};\n/**\r\n * Cross-browser addEventListener.\r\n * @method listen\r\n * @param {Object} target - The target to add event listener.\r\n * @param {String} eventType - The event type.\r\n * @param {Function} handler - The event handler.\r\n * @param {Object} handler - The options object that specifies\r\n * characteristics about the event listener.\r\n * @return {Object} The object to be able to remove the handler.\r\n */\n\nfunction listen(target, eventType, handler, options) {\n  var add = 'addEventListener';\n  var _remove = 'removeEventListener';\n  var type = eventType;\n  var eventOptions = supportPassiveEvent ? assign({}, defaultEventOption, options) : false;\n\n  if (!target.addEventListener && target.attachEvent) {\n    add = 'attachEvent';\n    _remove = 'detachEvent';\n    type = 'on' + eventType;\n  }\n\n  target[add](type, handler, eventOptions);\n  return {\n    remove: function remove() {\n      target[_remove](eventType, handler);\n    }\n  };\n}\n\nexport default listen;","map":{"version":3,"sources":["C:/Users/ayaqub/Desktop/iprove3/node_modules/subscribe-ui-event/dist-es/lib/listen.js"],"names":["assign","globalVars","supportPassiveEvent","defaultEventOption","capture","passive","listen","target","eventType","handler","options","add","_remove","type","eventOptions","addEventListener","attachEvent","remove"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,IAAIC,mBAAmB,GAAGD,UAAU,CAACC,mBAArC;AAGA,IAAIC,kBAAkB,GAAG;AACvBC,EAAAA,OAAO,EAAE,KADc;AAEvBC,EAAAA,OAAO,EAAE;AAFc,CAAzB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqD;AACnD,MAAIC,GAAG,GAAG,kBAAV;AACA,MAAIC,OAAO,GAAG,qBAAd;AACA,MAAIC,IAAI,GAAGL,SAAX;AAEA,MAAIM,YAAY,GAAGZ,mBAAmB,GAAGF,MAAM,CAAC,EAAD,EAAKG,kBAAL,EAAyBO,OAAzB,CAAT,GAA6C,KAAnF;;AAEA,MAAI,CAACH,MAAM,CAACQ,gBAAR,IAA4BR,MAAM,CAACS,WAAvC,EAAoD;AAClDL,IAAAA,GAAG,GAAG,aAAN;AACAC,IAAAA,OAAO,GAAG,aAAV;AACAC,IAAAA,IAAI,GAAG,OAAOL,SAAd;AACD;;AACDD,EAAAA,MAAM,CAACI,GAAD,CAAN,CAAYE,IAAZ,EAAkBJ,OAAlB,EAA2BK,YAA3B;AAEA,SAAO;AACLG,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxBV,MAAAA,MAAM,CAACK,OAAD,CAAN,CAAgBJ,SAAhB,EAA2BC,OAA3B;AACD;AAHI,GAAP;AAKD;;AAED,eAAeH,MAAf","sourcesContent":["/**\r\n * Copyright 2015, Yahoo! Inc.\r\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\r\n */\r\n\r\nimport assign from 'lodash/assign';\r\nimport globalVars from '../globalVars';\r\n\r\nvar supportPassiveEvent = globalVars.supportPassiveEvent;\r\n\r\n\r\nvar defaultEventOption = {\r\n  capture: false,\r\n  passive: false\r\n};\r\n\r\n/**\r\n * Cross-browser addEventListener.\r\n * @method listen\r\n * @param {Object} target - The target to add event listener.\r\n * @param {String} eventType - The event type.\r\n * @param {Function} handler - The event handler.\r\n * @param {Object} handler - The options object that specifies\r\n * characteristics about the event listener.\r\n * @return {Object} The object to be able to remove the handler.\r\n */\r\nfunction listen(target, eventType, handler, options) {\r\n  var add = 'addEventListener';\r\n  var _remove = 'removeEventListener';\r\n  var type = eventType;\r\n\r\n  var eventOptions = supportPassiveEvent ? assign({}, defaultEventOption, options) : false;\r\n\r\n  if (!target.addEventListener && target.attachEvent) {\r\n    add = 'attachEvent';\r\n    _remove = 'detachEvent';\r\n    type = 'on' + eventType;\r\n  }\r\n  target[add](type, handler, eventOptions);\r\n\r\n  return {\r\n    remove: function remove() {\r\n      target[_remove](eventType, handler);\r\n    }\r\n  };\r\n}\r\n\r\nexport default listen;\r\n"]},"metadata":{},"sourceType":"module"}