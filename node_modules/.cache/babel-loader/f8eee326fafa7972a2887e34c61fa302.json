{"ast":null,"code":"/**\r\n * Copyright 2015, Yahoo! Inc.\r\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\r\n */\n\n/* global window, document, setTimeout */\nimport clone from 'lodash/clone';\nimport throttle from 'lodash/throttle';\nimport noop from 'lodash/noop';\nimport AugmentedEvent from './AugmentedEvent';\nimport globalVars from './globalVars';\nimport leIE8 from './lib/leIE8';\nimport listen from './lib/listen';\nimport rAFThrottle from './lib/rAFThrottle'; // constants\n\nimport { EVENT_END_DELAY } from './constants';\nvar connections = globalVars.connections,\n    EE = globalVars.EE,\n    listeners = globalVars.listeners,\n    removers = globalVars.removers; // global variables\n\nvar doc = void 0;\nvar win = void 0;\nvar body = void 0;\nvar hashId = 0;\n\nif (typeof window !== 'undefined') {\n  win = window;\n  doc = win.document || document;\n  body = doc.body;\n}\n\nfunction getHash(domNode) {\n  return domNode.id || 'target-id-' + hashId++; // eslint-disable-line\n}\n/**\r\n * Connect a throttled event to a throttled main event, and return an event remover.\r\n * The number of connections to a throttled main event will be kept. If all throttled events\r\n * are removed, then remove throttled main event.\r\n * @method connectThrottle\r\n * @param {String} throttledEvent - A throttled event\r\n * @param {Function} cb - Callback function\r\n * @param {Object} ctx - The \"this\"\r\n * @param {String} throttledMainEvent - A throttled main event\r\n * @return {Object} An event remover\r\n */\n\n\nfunction connectThrottle(throttledEvent, cb, ctx, throttledMainEvent) {\n  EE.on(throttledEvent, cb || noop, ctx);\n  throttledMainEvent = throttledMainEvent || throttledEvent;\n  connections[throttledMainEvent] = (connections[throttledMainEvent] || 0) + 1;\n  return {\n    _type: throttledEvent,\n    _cb: cb,\n    _ctx: ctx,\n    unsubscribe: function unsubscribe() {\n      if (!this._type) {\n        return;\n      }\n\n      EE.removeListener(throttledEvent, cb, ctx);\n      connections[throttledMainEvent]--;\n\n      if (connections[throttledMainEvent] === 0) {\n        listeners[throttledMainEvent].remove();\n        listeners[throttledMainEvent] = undefined;\n      }\n\n      this._type = undefined;\n      this._cb = undefined;\n      this._ctx = undefined; // remove the remover from removers array\n\n      for (var i = removers.length - 1; i >= 0; i--) {\n        var remover = removers[i];\n\n        if (remover === this) {\n          removers.splice(i, 1);\n          break;\n        }\n      }\n    }\n  };\n}\n/**\r\n * Connect to event, event start and event end.\r\n * @method connectContinuousEvent\r\n * @param {Object} target - The target of a main event, window or document.\r\n * @param {String} mainEvent - A browser event, like scroll or resize.\r\n * @param {String} event - A subscribe event.\r\n * @param {Object} eventOptions - An options pass to event listener\r\n */\n\n\nfunction connectContinuousEvent(target, mainEvent, event) {\n  return function throttleEvent(throttleRate, cb, options, eventOptions) {\n    var context = options.context;\n    var domTarget = options.target;\n    var domId = domTarget && getHash(domTarget);\n    var targetPart = domId ? ':' + domId : '';\n    var throttledStartEvent = mainEvent + 'Start:' + throttleRate + targetPart;\n    var throttledEndEvent = mainEvent + 'End:' + throttleRate + targetPart;\n    var throttledMainEvent = mainEvent + ':' + throttleRate + targetPart;\n    var throttledEvent = event + ':' + throttleRate + targetPart;\n    var remover = connectThrottle(throttledEvent, cb, context, throttledMainEvent);\n    removers.push(remover);\n\n    if (listeners[throttledMainEvent]) {\n      return remover;\n    }\n\n    var ae = {\n      start: new AugmentedEvent({\n        mainType: mainEvent,\n        subType: 'start'\n      }),\n      // start\n      main: new AugmentedEvent({\n        mainType: mainEvent\n      }),\n      // main\n      end: new AugmentedEvent({\n        mainType: mainEvent,\n        subType: 'end'\n      })\n    }; // No throttle for throttleRate = 0\n    // end\n\n    if (throttleRate === 'raf') {\n      throttleRate = 16; // Set as a number for setTimeout later.\n\n      handler = rAFThrottle(handler);\n    } else if (throttleRate > 0) {\n      handler = throttle(handler, throttleRate);\n    }\n\n    var timer = void 0;\n\n    function endCallback(e) {\n      ae.end.update(e);\n      EE.emit(throttledEndEvent, e, ae.end);\n      timer = null;\n    }\n\n    function handler(e) {\n      if (!timer) {\n        ae.start.update(e);\n        EE.emit(throttledStartEvent, e, ae.start);\n      }\n\n      clearTimeout(timer);\n      ae.main.update(e);\n      EE.emit(throttledMainEvent, e, ae.main);\n\n      if (!leIE8) {\n        timer = setTimeout(endCallback.bind(null, e), throttleRate + EVENT_END_DELAY);\n      } else {\n        // For browser less then and equal to IE8, event object need to be cloned for setTimeout.\n        timer = setTimeout(function () {\n          endCallback(clone(e));\n        }, throttleRate + EVENT_END_DELAY);\n      }\n    }\n\n    listeners[throttledMainEvent] = listen(domTarget || target, mainEvent, handler, eventOptions);\n    return remover;\n  };\n}\n\nfunction connectDiscreteEvent(target, event) {\n  return function throttleEvent(throttleRate, cb, options, eventOptions) {\n    var context = options.context;\n    var domTarget = options.target;\n    var domId = domTarget && getHash(domTarget); // no throttling for discrete event\n\n    var throttledEvent = event + ':0' + (domId ? ':' + domId : '');\n    var remover = connectThrottle(throttledEvent, cb, context);\n    removers.push(remover);\n\n    if (listeners[throttledEvent]) {\n      return remover;\n    }\n\n    var ae = new AugmentedEvent({\n      mainType: event\n    });\n\n    function handler(e) {\n      ae.update(e);\n      EE.emit(throttledEvent, e, ae);\n    }\n\n    listeners[throttledEvent] = listen(domTarget || target, event, handler, eventOptions);\n    return remover;\n  };\n}\n\nexport default {\n  scrollStart: connectContinuousEvent(win, 'scroll', 'scrollStart'),\n  scrollEnd: connectContinuousEvent(win, 'scroll', 'scrollEnd'),\n  scroll: connectContinuousEvent(win, 'scroll', 'scroll'),\n  resizeStart: connectContinuousEvent(win, 'resize', 'resizeStart'),\n  resizeEnd: connectContinuousEvent(win, 'resize', 'resizeEnd'),\n  resize: connectContinuousEvent(win, 'resize', 'resize'),\n  visibilitychange: connectDiscreteEvent(doc, 'visibilitychange'),\n  touchmoveStart: connectContinuousEvent(body, 'touchmove', 'touchmoveStart'),\n  touchmoveEnd: connectContinuousEvent(body, 'touchmove', 'touchmoveEnd'),\n  touchmove: connectContinuousEvent(body, 'touchmove', 'touchmove'),\n  touchstart: connectDiscreteEvent(body, 'touchstart'),\n  touchend: connectDiscreteEvent(body, 'touchend')\n};","map":{"version":3,"sources":["C:/Users/ayaqub/Desktop/iprove3/node_modules/subscribe-ui-event/dist-es/mainEventConnectors.js"],"names":["clone","throttle","noop","AugmentedEvent","globalVars","leIE8","listen","rAFThrottle","EVENT_END_DELAY","connections","EE","listeners","removers","doc","win","body","hashId","window","document","getHash","domNode","id","connectThrottle","throttledEvent","cb","ctx","throttledMainEvent","on","_type","_cb","_ctx","unsubscribe","removeListener","remove","undefined","i","length","remover","splice","connectContinuousEvent","target","mainEvent","event","throttleEvent","throttleRate","options","eventOptions","context","domTarget","domId","targetPart","throttledStartEvent","throttledEndEvent","push","ae","start","mainType","subType","main","end","handler","timer","endCallback","e","update","emit","clearTimeout","setTimeout","bind","connectDiscreteEvent","scrollStart","scrollEnd","scroll","resizeStart","resizeEnd","resize","visibilitychange","touchmoveStart","touchmoveEnd","touchmove","touchstart","touchend"],"mappings":"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","sourcesContent":["/**\r\n * Copyright 2015, Yahoo! Inc.\r\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\r\n */\r\n/* global window, document, setTimeout */\r\n\r\nimport clone from 'lodash/clone';\r\nimport throttle from 'lodash/throttle';\r\nimport noop from 'lodash/noop';\r\n\r\nimport AugmentedEvent from './AugmentedEvent';\r\nimport globalVars from './globalVars';\r\nimport leIE8 from './lib/leIE8';\r\nimport listen from './lib/listen';\r\nimport rAFThrottle from './lib/rAFThrottle';\r\n\r\n// constants\r\nimport { EVENT_END_DELAY } from './constants';\r\n\r\nvar connections = globalVars.connections,\r\n    EE = globalVars.EE,\r\n    listeners = globalVars.listeners,\r\n    removers = globalVars.removers;\r\n\r\n// global variables\r\n\r\nvar doc = void 0;\r\nvar win = void 0;\r\nvar body = void 0;\r\nvar hashId = 0;\r\n\r\nif (typeof window !== 'undefined') {\r\n  win = window;\r\n  doc = win.document || document;\r\n  body = doc.body;\r\n}\r\n\r\nfunction getHash(domNode) {\r\n  return domNode.id || 'target-id-' + hashId++; // eslint-disable-line\r\n}\r\n\r\n/**\r\n * Connect a throttled event to a throttled main event, and return an event remover.\r\n * The number of connections to a throttled main event will be kept. If all throttled events\r\n * are removed, then remove throttled main event.\r\n * @method connectThrottle\r\n * @param {String} throttledEvent - A throttled event\r\n * @param {Function} cb - Callback function\r\n * @param {Object} ctx - The \"this\"\r\n * @param {String} throttledMainEvent - A throttled main event\r\n * @return {Object} An event remover\r\n */\r\nfunction connectThrottle(throttledEvent, cb, ctx, throttledMainEvent) {\r\n  EE.on(throttledEvent, cb || noop, ctx);\r\n  throttledMainEvent = throttledMainEvent || throttledEvent;\r\n  connections[throttledMainEvent] = (connections[throttledMainEvent] || 0) + 1;\r\n  return {\r\n    _type: throttledEvent,\r\n    _cb: cb,\r\n    _ctx: ctx,\r\n    unsubscribe: function unsubscribe() {\r\n      if (!this._type) {\r\n        return;\r\n      }\r\n\r\n      EE.removeListener(throttledEvent, cb, ctx);\r\n      connections[throttledMainEvent]--;\r\n      if (connections[throttledMainEvent] === 0) {\r\n        listeners[throttledMainEvent].remove();\r\n        listeners[throttledMainEvent] = undefined;\r\n      }\r\n\r\n      this._type = undefined;\r\n      this._cb = undefined;\r\n      this._ctx = undefined;\r\n\r\n      // remove the remover from removers array\r\n      for (var i = removers.length - 1; i >= 0; i--) {\r\n        var remover = removers[i];\r\n        if (remover === this) {\r\n          removers.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Connect to event, event start and event end.\r\n * @method connectContinuousEvent\r\n * @param {Object} target - The target of a main event, window or document.\r\n * @param {String} mainEvent - A browser event, like scroll or resize.\r\n * @param {String} event - A subscribe event.\r\n * @param {Object} eventOptions - An options pass to event listener\r\n */\r\nfunction connectContinuousEvent(target, mainEvent, event) {\r\n  return function throttleEvent(throttleRate, cb, options, eventOptions) {\r\n    var context = options.context;\r\n    var domTarget = options.target;\r\n    var domId = domTarget && getHash(domTarget);\r\n    var targetPart = domId ? ':' + domId : '';\r\n\r\n    var throttledStartEvent = mainEvent + 'Start:' + throttleRate + targetPart;\r\n    var throttledEndEvent = mainEvent + 'End:' + throttleRate + targetPart;\r\n    var throttledMainEvent = mainEvent + ':' + throttleRate + targetPart;\r\n    var throttledEvent = event + ':' + throttleRate + targetPart;\r\n\r\n    var remover = connectThrottle(throttledEvent, cb, context, throttledMainEvent);\r\n    removers.push(remover);\r\n\r\n    if (listeners[throttledMainEvent]) {\r\n      return remover;\r\n    }\r\n\r\n    var ae = {\r\n      start: new AugmentedEvent({ mainType: mainEvent, subType: 'start' }), // start\r\n      main: new AugmentedEvent({ mainType: mainEvent }), // main\r\n      end: new AugmentedEvent({ mainType: mainEvent, subType: 'end' })\r\n    };\r\n\r\n    // No throttle for throttleRate = 0\r\n    // end\r\n    if (throttleRate === 'raf') {\r\n      throttleRate = 16; // Set as a number for setTimeout later.\r\n      handler = rAFThrottle(handler);\r\n    } else if (throttleRate > 0) {\r\n      handler = throttle(handler, throttleRate);\r\n    }\r\n\r\n    var timer = void 0;\r\n    function endCallback(e) {\r\n      ae.end.update(e);\r\n      EE.emit(throttledEndEvent, e, ae.end);\r\n      timer = null;\r\n    }\r\n    function handler(e) {\r\n      if (!timer) {\r\n        ae.start.update(e);\r\n        EE.emit(throttledStartEvent, e, ae.start);\r\n      }\r\n      clearTimeout(timer);\r\n\r\n      ae.main.update(e);\r\n      EE.emit(throttledMainEvent, e, ae.main);\r\n      if (!leIE8) {\r\n        timer = setTimeout(endCallback.bind(null, e), throttleRate + EVENT_END_DELAY);\r\n      } else {\r\n        // For browser less then and equal to IE8, event object need to be cloned for setTimeout.\r\n        timer = setTimeout(function () {\r\n          endCallback(clone(e));\r\n        }, throttleRate + EVENT_END_DELAY);\r\n      }\r\n    }\r\n\r\n    listeners[throttledMainEvent] = listen(domTarget || target, mainEvent, handler, eventOptions);\r\n    return remover;\r\n  };\r\n}\r\n\r\nfunction connectDiscreteEvent(target, event) {\r\n  return function throttleEvent(throttleRate, cb, options, eventOptions) {\r\n    var context = options.context;\r\n    var domTarget = options.target;\r\n    var domId = domTarget && getHash(domTarget);\r\n\r\n    // no throttling for discrete event\r\n    var throttledEvent = event + ':0' + (domId ? ':' + domId : '');\r\n\r\n    var remover = connectThrottle(throttledEvent, cb, context);\r\n    removers.push(remover);\r\n\r\n    if (listeners[throttledEvent]) {\r\n      return remover;\r\n    }\r\n\r\n    var ae = new AugmentedEvent({ mainType: event });\r\n\r\n    function handler(e) {\r\n      ae.update(e);\r\n      EE.emit(throttledEvent, e, ae);\r\n    }\r\n\r\n    listeners[throttledEvent] = listen(domTarget || target, event, handler, eventOptions);\r\n    return remover;\r\n  };\r\n}\r\n\r\nexport default {\r\n  scrollStart: connectContinuousEvent(win, 'scroll', 'scrollStart'),\r\n  scrollEnd: connectContinuousEvent(win, 'scroll', 'scrollEnd'),\r\n  scroll: connectContinuousEvent(win, 'scroll', 'scroll'),\r\n  resizeStart: connectContinuousEvent(win, 'resize', 'resizeStart'),\r\n  resizeEnd: connectContinuousEvent(win, 'resize', 'resizeEnd'),\r\n  resize: connectContinuousEvent(win, 'resize', 'resize'),\r\n  visibilitychange: connectDiscreteEvent(doc, 'visibilitychange'),\r\n  touchmoveStart: connectContinuousEvent(body, 'touchmove', 'touchmoveStart'),\r\n  touchmoveEnd: connectContinuousEvent(body, 'touchmove', 'touchmoveEnd'),\r\n  touchmove: connectContinuousEvent(body, 'touchmove', 'touchmove'),\r\n  touchstart: connectDiscreteEvent(body, 'touchstart'),\r\n  touchend: connectDiscreteEvent(body, 'touchend')\r\n};\r\n"]},"metadata":{},"sourceType":"module"}