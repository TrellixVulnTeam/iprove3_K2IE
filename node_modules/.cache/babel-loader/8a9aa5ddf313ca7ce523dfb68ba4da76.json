{"ast":null,"code":"export const initialState = {\n  purchaseLo: [],\n  purchaseOla: [],\n  disburseLo: [],\n  disburseOla: []\n};\nexport const getPurchaseTotalLo = purchaseLo => purchaseLo === null || purchaseLo === void 0 ? void 0 : purchaseLo.reduce((amount, item) => Number(item.price) * Number(item.quantity) + amount, 0);\nexport const getPurchaseTotalOla = purchaseOla => purchaseOla === null || purchaseOla === void 0 ? void 0 : purchaseOla.reduce((amount, item) => Number(item.price) * Number(item.quantity) + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_PURCHASE\":\n      if (action.item.company === \"Landover\") {\n        return { ...state,\n          purchaseLo: [...state.purchaseLo, action.item]\n        };\n      } else {\n        return { ...state,\n          purchaseOla: [...state.purchaseOla, action.item]\n        };\n      }\n\n    case \"ADD_TO_DISBURSE\":\n      if (action.item.company === \"Landover\") {\n        return { ...state,\n          disburseLo: [...state.disburseLo, action.item]\n        };\n      } else {\n        return { ...state,\n          disburseOla: [...state.disburseOla, action.item]\n        };\n      }\n\n    case \"UPDATE_PURCHASE_QUANTITY\":\n      if (action.item.company === \"Landover\") {\n        console.log(action.item.id);\n        var oldPurchaseLo = [...state.purchaseLo];\n        const ind = state.purchaseLo.findIndex(oldItem => oldItem.id === action.item.id && oldItem.company === action.item.company);\n\n        if (ind >= 0) {\n          oldPurchaseLo[ind].quantity = action.item.quantity;\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          purchaseLo: oldPurchaseLo\n        };\n      } else {\n        var oldPurchaseOla = [...state.purchaseOla];\n        const ind = state.purchaseOla.findIndex(oldItem => oldItem.id === action.item.id && oldItem.company === action.item.company);\n\n        if (ind >= 0) {\n          oldPurchaseOla[ind].quantity = action.item.quantity;\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          purchaseOla: oldPurchaseOla\n        };\n      }\n\n    case \"UPDATE_DISBURSE_QUANTITY\":\n      if (action.item.company === \"Landover\") {\n        //   console.log(action.item.uid);\n        var oldDisburseLo = [...state.disburseLo];\n        const ind = state.disburseLo.findIndex(oldItem => oldItem.uid === action.item.uid && oldItem.id === action.item.id);\n\n        if (ind >= 0) {\n          oldDisburseLo[ind].quantity = Number(action.item.quantity);\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          disburseLo: oldDisburseLo\n        };\n      } else {\n        var oldDisburseOla = [...state.disburseOla];\n        const ind = state.disburseOla.findIndex(oldItem => oldItem.uid === action.item.uid && oldItem.id === action.item.id);\n\n        if (ind >= 0) {\n          oldDisburseOla[ind].quantity = Number(action.item.quantity);\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          disburseOla: oldDisburseOla\n        };\n      }\n\n    case \"UPDATE_PURCHASE_PRICE\":\n      if (action.item.company === \"Landover\") {\n        var oldPurchaseLo = [...state.purchaseLo];\n        const ind = state.purchaseLo.findIndex(oldItem => oldItem.id === action.item.id && oldItem.company === action.item.company);\n\n        if (ind >= 0) {\n          oldPurchaseLo[ind].price = action.item.price;\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          purchaseLo: oldPurchaseLo\n        };\n      } else {\n        var oldPurchaseOla = [...state.purchaseOla];\n        const ind = state.purchaseOla.findIndex(oldItem => oldItem.id === action.item.id && oldItem.company === action.item.company);\n\n        if (ind >= 0) {\n          oldPurchaseOla[ind].price = action.item.price;\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          purchaseOla: oldPurchaseOla\n        };\n      }\n\n    case \"UPDATE_PURCHASE_SUPPLIER\":\n      if (action.item.company === \"Landover\") {\n        var oldPurchaseLo = [...state.purchaseLo];\n        const ind = state.purchaseLo.findIndex(oldItem => oldItem.id === action.item.id && oldItem.company === action.item.company);\n\n        if (ind >= 0) {\n          oldPurchaseLo[ind].supplier = action.item.supplier;\n          oldPurchaseLo[ind].supplier_name = action.item.supplier_name;\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          purchaseLo: oldPurchaseLo\n        };\n      } else {\n        var oldPurchaseOla = [...state.purchaseOla];\n        const ind = state.purchaseOla.findIndex(oldItem => oldItem.id === action.item.id && oldItem.company === action.item.company);\n\n        if (ind >= 0) {\n          oldPurchaseOla[ind].supplier = action.item.supplier;\n          oldPurchaseOla[ind].supplier_name = action.item.supplier_name;\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          purchaseOla: oldPurchaseOla\n        };\n      }\n\n    case \"UPDATE_DISBURSE_UNIT\":\n      if (action.item.company === \"Landover\") {\n        var oldDisburseLo = [...state.disburseLo];\n        const ind = state.disburseLo.findIndex(oldItem => oldItem.uid === action.item.uid && oldItem.id === action.item.id);\n\n        if (ind >= 0) {\n          oldDisburseLo[ind].dept = action.item.dept;\n          oldDisburseLo[ind].dept_name = action.item.dept_name;\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          disburseLo: oldDisburseLo\n        };\n      } else {\n        var oldDisburseOla = [...state.disburseOla];\n        const ind = state.disburseOla.findIndex(oldItem => oldItem.uid === action.item.uid && oldItem.id === action.item.id);\n\n        if (ind >= 0) {\n          oldDisburseOla[ind].dept = action.item.dept;\n          oldDisburseOla[ind].dept_name = action.item.dept_name;\n        } else {\n          console.log(\"this item is missing\");\n        }\n\n        return { ...state,\n          disburseOla: oldDisburseOla\n        };\n      }\n\n    case \"REMOVE_FROM_PURCHASE\":\n      if (action.item.company === \"Landover\") {\n        let newPurchaseLo = [...state.purchaseLo]; // console.log(newBasket);\n\n        const index = state.purchaseLo.findIndex(purchaseItem => purchaseItem.id === action.item.id && purchaseItem.company === action.item.company);\n\n        if (index >= 0) {\n          newPurchaseLo.splice(index, 1);\n        } else {\n          // console.log(newBasket);\n          console.warn(`can't remove id = ${action.id} cos it does not exist`);\n        }\n\n        return { ...state,\n          purchaseLo: newPurchaseLo\n        };\n      } else {\n        let newPurchaseOla = [...state.purchaseOla]; // console.log(newBasket);\n\n        const index = state.purchaseOla.findIndex(purchaseItem => purchaseItem.id === action.item.id && purchaseItem.company === action.item.company);\n\n        if (index >= 0) {\n          newPurchaseOla.splice(index, 1);\n        } else {\n          // console.log(newBasket);\n          console.warn(`can't remove id = ${action.id} cos it does not exist`);\n        }\n\n        return { ...state,\n          purchaseOla: newPurchaseOla\n        };\n      }\n\n    case \"REMOVE_FROM_DISBURSE\":\n      if (action.item.company === \"Landover\") {\n        let newDisburseLo = [...state.disburseLo]; // console.log(newBasket);\n\n        const index = state.disburseLo.findIndex(disburseItem => disburseItem.uid === action.item.uid && disburseItem.id === action.item.id && disburseItem.dept === action.item.dept);\n\n        if (index >= 0) {\n          console.log(index);\n          newDisburseLo.splice(index, 1);\n        } else {\n          // console.log(newBasket);\n          console.warn(`can't remove id = ${action.id} cos it does not exist`);\n        }\n\n        return { ...state,\n          disburseLo: newDisburseLo\n        };\n      } else {\n        let newDisburseOla = [...state.disburseOla]; // console.log(newBasket);\n\n        const index = state.disburseOla.findIndex(disburseItem => disburseItem.uid === action.item.uid && disburseItem.id === action.item.id && disburseItem.dept === action.item.dept);\n\n        if (index >= 0) {\n          newDisburseOla.splice(index, 1);\n        } else {\n          // console.log(newBasket);\n          console.warn(`can't remove id = ${action.id} cos it does not exist`);\n        }\n\n        return { ...state,\n          disburseOla: newDisburseOla\n        };\n      }\n\n    case \"EMPTY_PURCHASE\":\n      if (action.item.company === \"Landover\") {\n        return { ...state,\n          purchaseLo: []\n        };\n      } else {\n        return { ...state,\n          purchaseOla: []\n        };\n      }\n\n    case \"EMPTY_DISBURSE\":\n      if (action.item.company === \"Landover\") {\n        return { ...state,\n          disburseLo: []\n        };\n      } else {\n        return { ...state,\n          disburseOla: []\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/xampp/htdocs/iproven2/theme/src/Reducer.js"],"names":["initialState","purchaseLo","purchaseOla","disburseLo","disburseOla","getPurchaseTotalLo","reduce","amount","item","Number","price","quantity","getPurchaseTotalOla","reducer","state","action","type","company","console","log","id","oldPurchaseLo","ind","findIndex","oldItem","oldPurchaseOla","oldDisburseLo","uid","oldDisburseOla","supplier","supplier_name","dept","dept_name","newPurchaseLo","index","purchaseItem","splice","warn","newPurchaseOla","newDisburseLo","disburseItem","newDisburseOla"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  purchaseLo: [],\r\n  purchaseOla: [],\r\n  disburseLo: [],\r\n  disburseOla: [],\r\n};\r\n\r\nexport const getPurchaseTotalLo = (purchaseLo) =>\r\n  purchaseLo?.reduce(\r\n    (amount, item) => Number(item.price) * Number(item.quantity) + amount,\r\n    0\r\n  );\r\n\r\nexport const getPurchaseTotalOla = (purchaseOla) =>\r\n  purchaseOla?.reduce(\r\n    (amount, item) => Number(item.price) * Number(item.quantity) + amount,\r\n    0\r\n  );\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_PURCHASE\":\r\n      if (action.item.company === \"Landover\") {\r\n        return {\r\n          ...state,\r\n          purchaseLo: [...state.purchaseLo, action.item],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          purchaseOla: [...state.purchaseOla, action.item],\r\n        };\r\n      }\r\n    case \"ADD_TO_DISBURSE\":\r\n      if (action.item.company === \"Landover\") {\r\n        return {\r\n          ...state,\r\n          disburseLo: [...state.disburseLo, action.item],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          disburseOla: [...state.disburseOla, action.item],\r\n        };\r\n      }\r\n\r\n    case \"UPDATE_PURCHASE_QUANTITY\":\r\n      if (action.item.company === \"Landover\") {\r\n        console.log(action.item.id);\r\n        var oldPurchaseLo = [...state.purchaseLo];\r\n        const ind = state.purchaseLo.findIndex(\r\n          (oldItem) =>\r\n            oldItem.id === action.item.id &&\r\n            oldItem.company === action.item.company\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldPurchaseLo[ind].quantity = action.item.quantity;\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, purchaseLo: oldPurchaseLo };\r\n      } else {\r\n        var oldPurchaseOla = [...state.purchaseOla];\r\n        const ind = state.purchaseOla.findIndex(\r\n          (oldItem) =>\r\n            oldItem.id === action.item.id &&\r\n            oldItem.company === action.item.company\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldPurchaseOla[ind].quantity = action.item.quantity;\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, purchaseOla: oldPurchaseOla };\r\n      }\r\n\r\n    case \"UPDATE_DISBURSE_QUANTITY\":\r\n      if (action.item.company === \"Landover\") {\r\n        //   console.log(action.item.uid);\r\n        var oldDisburseLo = [...state.disburseLo];\r\n        const ind = state.disburseLo.findIndex(\r\n          (oldItem) =>\r\n            oldItem.uid === action.item.uid && oldItem.id === action.item.id\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldDisburseLo[ind].quantity = Number(action.item.quantity);\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, disburseLo: oldDisburseLo };\r\n      } else {\r\n        var oldDisburseOla = [...state.disburseOla];\r\n        const ind = state.disburseOla.findIndex(\r\n          (oldItem) =>\r\n            oldItem.uid === action.item.uid && oldItem.id === action.item.id\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldDisburseOla[ind].quantity = Number(action.item.quantity);\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, disburseOla: oldDisburseOla };\r\n      }\r\n\r\n    case \"UPDATE_PURCHASE_PRICE\":\r\n      if (action.item.company === \"Landover\") {\r\n        var oldPurchaseLo = [...state.purchaseLo];\r\n        const ind = state.purchaseLo.findIndex(\r\n          (oldItem) =>\r\n            oldItem.id === action.item.id &&\r\n            oldItem.company === action.item.company\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldPurchaseLo[ind].price = action.item.price;\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, purchaseLo: oldPurchaseLo };\r\n      } else {\r\n        var oldPurchaseOla = [...state.purchaseOla];\r\n        const ind = state.purchaseOla.findIndex(\r\n          (oldItem) =>\r\n            oldItem.id === action.item.id &&\r\n            oldItem.company === action.item.company\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldPurchaseOla[ind].price = action.item.price;\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, purchaseOla: oldPurchaseOla };\r\n      }\r\n\r\n    case \"UPDATE_PURCHASE_SUPPLIER\":\r\n      if (action.item.company === \"Landover\") {\r\n        var oldPurchaseLo = [...state.purchaseLo];\r\n        const ind = state.purchaseLo.findIndex(\r\n          (oldItem) =>\r\n            oldItem.id === action.item.id &&\r\n            oldItem.company === action.item.company\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldPurchaseLo[ind].supplier = action.item.supplier;\r\n          oldPurchaseLo[ind].supplier_name = action.item.supplier_name;\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, purchaseLo: oldPurchaseLo };\r\n      } else {\r\n        var oldPurchaseOla = [...state.purchaseOla];\r\n        const ind = state.purchaseOla.findIndex(\r\n          (oldItem) =>\r\n            oldItem.id === action.item.id &&\r\n            oldItem.company === action.item.company\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldPurchaseOla[ind].supplier = action.item.supplier;\r\n          oldPurchaseOla[ind].supplier_name = action.item.supplier_name;\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, purchaseOla: oldPurchaseOla };\r\n      }\r\n\r\n    case \"UPDATE_DISBURSE_UNIT\":\r\n      if (action.item.company === \"Landover\") {\r\n        var oldDisburseLo = [...state.disburseLo];\r\n        const ind = state.disburseLo.findIndex(\r\n          (oldItem) =>\r\n            oldItem.uid === action.item.uid && oldItem.id === action.item.id\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldDisburseLo[ind].dept = action.item.dept;\r\n          oldDisburseLo[ind].dept_name = action.item.dept_name;\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, disburseLo: oldDisburseLo };\r\n      } else {\r\n        var oldDisburseOla = [...state.disburseOla];\r\n        const ind = state.disburseOla.findIndex(\r\n          (oldItem) =>\r\n            oldItem.uid === action.item.uid && oldItem.id === action.item.id\r\n        );\r\n\r\n        if (ind >= 0) {\r\n          oldDisburseOla[ind].dept = action.item.dept;\r\n          oldDisburseOla[ind].dept_name = action.item.dept_name;\r\n        } else {\r\n          console.log(\"this item is missing\");\r\n        }\r\n\r\n        return { ...state, disburseOla: oldDisburseOla };\r\n      }\r\n\r\n    case \"REMOVE_FROM_PURCHASE\":\r\n      if (action.item.company === \"Landover\") {\r\n        let newPurchaseLo = [...state.purchaseLo];\r\n        // console.log(newBasket);\r\n        const index = state.purchaseLo.findIndex(\r\n          (purchaseItem) =>\r\n            purchaseItem.id === action.item.id &&\r\n            purchaseItem.company === action.item.company\r\n        );\r\n        if (index >= 0) {\r\n          newPurchaseLo.splice(index, 1);\r\n        } else {\r\n          // console.log(newBasket);\r\n          console.warn(`can't remove id = ${action.id} cos it does not exist`);\r\n        }\r\n        return { ...state, purchaseLo: newPurchaseLo };\r\n      } else {\r\n        let newPurchaseOla = [...state.purchaseOla];\r\n        // console.log(newBasket);\r\n        const index = state.purchaseOla.findIndex(\r\n          (purchaseItem) =>\r\n            purchaseItem.id === action.item.id &&\r\n            purchaseItem.company === action.item.company\r\n        );\r\n        if (index >= 0) {\r\n          newPurchaseOla.splice(index, 1);\r\n        } else {\r\n          // console.log(newBasket);\r\n          console.warn(`can't remove id = ${action.id} cos it does not exist`);\r\n        }\r\n        return { ...state, purchaseOla: newPurchaseOla };\r\n      }\r\n\r\n    case \"REMOVE_FROM_DISBURSE\":\r\n      if (action.item.company === \"Landover\") {\r\n        let newDisburseLo = [...state.disburseLo];\r\n        // console.log(newBasket);\r\n        const index = state.disburseLo.findIndex(\r\n          (disburseItem) =>\r\n            disburseItem.uid === action.item.uid &&\r\n            disburseItem.id === action.item.id &&\r\n            disburseItem.dept === action.item.dept\r\n        );\r\n        if (index >= 0) {\r\n          console.log(index);\r\n          newDisburseLo.splice(index, 1);\r\n        } else {\r\n          // console.log(newBasket);\r\n          console.warn(`can't remove id = ${action.id} cos it does not exist`);\r\n        }\r\n        return { ...state, disburseLo: newDisburseLo };\r\n      } else {\r\n        let newDisburseOla = [...state.disburseOla];\r\n        // console.log(newBasket);\r\n        const index = state.disburseOla.findIndex(\r\n          (disburseItem) =>\r\n            disburseItem.uid === action.item.uid &&\r\n            disburseItem.id === action.item.id &&\r\n            disburseItem.dept === action.item.dept\r\n        );\r\n        if (index >= 0) {\r\n          newDisburseOla.splice(index, 1);\r\n        } else {\r\n          // console.log(newBasket);\r\n          console.warn(`can't remove id = ${action.id} cos it does not exist`);\r\n        }\r\n        return { ...state, disburseOla: newDisburseOla };\r\n      }\r\n\r\n    case \"EMPTY_PURCHASE\":\r\n      if (action.item.company === \"Landover\") {\r\n        return {\r\n          ...state,\r\n          purchaseLo: [],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          purchaseOla: [],\r\n        };\r\n      }\r\n\r\n    case \"EMPTY_DISBURSE\":\r\n      if (action.item.company === \"Landover\") {\r\n        return {\r\n          ...state,\r\n          disburseLo: [],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          disburseOla: [],\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}